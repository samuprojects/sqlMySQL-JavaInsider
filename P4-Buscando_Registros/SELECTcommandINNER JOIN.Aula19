Observando outros relacionamentos foi buscado as informações da tabela ticket: SELECT * FROM ticket;
# id, customer_id, flight_number, seat, purchase_date
1'1', '1', '1234', '13', '2030-01-01 00:00:00'
2'2', '1', '4343', '10', '2030-06-10 09:00:00'
3'3', '1', '1234', '16', '2030-02-02 20:00:00'
4'4', '2', '4589', '27', '2030-03-28 15:00:00'
5'5', '3', '4343', '1', '2030-04-04 21:00:00'
6'6', '3', '9641', '9', '2030-12-09 11:00:00'

ticket tem duas chaves estrangeiras, uma para customer (por meio de customer_id) e outra para flight (por meio de flight_number).
Para trazer os registros de ticket com as informações do voo podemos fazer
SELECT * FROM ticket AS t -> também funciona colocar só o t, já entende que é o AS -> SELECT * FROM ticket t

SELECT * FROM ticket t INNER JOIN flight f ON t.flight_number = f.number;

Com isso além das informações do ticket em si, teremos as informações dos voos
# id, customer_id, flight_number, seat, purchase_date, number, dep_airport_iata_code, arr_airport_iata_code, dep_time, arr_time, price
1'1', '1', '1234', '13', '2030-01-01 00:00:00', '1234', 'GRU', 'LAX', '2030-10-01 14:00:00', '2030-10-02 03:00:00', '410.00'
2'3', '1', '1234', '16', '2030-02-02 20:00:00', '1234', 'GRU', 'LAX', '2030-10-01 14:00:00', '2030-10-02 03:00:00', '410.00'
3'2', '1', '4343', '10', '2030-06-10 09:00:00', '4343', 'GIG', 'GRU', '2030-11-20 14:00:00', '2030-11-20 14:40:00', '80.00'
4'5', '3', '4343', '1', '2030-04-04 21:00:00', '4343', 'GIG', 'GRU', '2030-11-20 14:00:00', '2030-11-20 14:40:00', '80.00'
5'4', '2', '4589', '27', '2030-03-28 15:00:00', '4589', 'GRU', 'MIA', '2030-02-01 23:00:00', '2030-02-02 05:00:00', '350.00'
6'6', '3', '9641', '9', '2030-12-09 11:00:00', '9641', 'GIG', 'MIA', '2020-06-10 23:00:00', '2030-06-10 05:00:00', '350.00'


É importante perceber que como temos uma relação de 1 para muitos entre flight e ticket, ou seja, mais de um voo pertencendo a um ticket, quando fazemos esse tipo de JOIN retornará informações de voos repetidos.
Isso não é um erro e sim uma característica do JOIN, porque ao juntar as duas tabelas com esse tipo de relacionamento (1 para muitos ou muitos para 1), pode ocorrer de um dos lados ter a duplicação da informação, o que é normal.


Se quiser retornar informações com o aeroporto de saída Guarulhos podemos acrescentar no comando SQL o WHERE conforme a seguir
SELECT * FROM ticket t INNER JOIN flight f ON t.flight_number = f.number WHERE dep_airport_iata_code = 'GRU';
# id, customer_id, flight_number, seat, purchase_date, number, dep_airport_iata_code, arr_airport_iata_code, dep_time, arr_time, price
1'1', '1', '1234', '13', '2030-01-01 00:00:00', '1234', 'GRU', 'LAX', '2030-10-01 14:00:00', '2030-10-02 03:00:00', '410.00'
2'3', '1', '1234', '16', '2030-02-02 20:00:00', '1234', 'GRU', 'LAX', '2030-10-01 14:00:00', '2030-10-02 03:00:00', '410.00'
3'4', '2', '4589', '27', '2030-03-28 15:00:00', '4589', 'GRU', 'MIA', '2030-02-01 23:00:00', '2030-02-02 05:00:00', '350.00'


Se quiser retornar apenas o flight_number, o assento e o aeroporto de chegada e saída podemos alterar o SELECT para 
SELECT flight_number, seat, dep_airport_iata_code, arr_airport_iata_code FROM ticket t INNER JOIN flight f ON t.flight_number = f.number WHERE dep_airport_iata_code = 'GRU';
# flight_number, seat, dep_airport_iata_code, arr_airport_iata_code
1'1234', '13', 'GRU', 'LAX'
2'1234', '16', 'GRU', 'LAX'
3'4589', '27', 'GRU', 'MIA'

